{
  "version": 3,
  "sources": ["../../../index.mjs", "../../../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-RYmmzG/middleware-insertion-facade.js", "../../../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-RYmmzG/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\orientrius.cook\\OneDrive - SAUSS\\Documents\\GitHub\\USSTHQ-1\\gdos-comparison\\worker\\.wrangler\\tmp\\dev-5LiiiC",
  "sourcesContent": ["export default {\r\n  async fetch(request, env, ctx) {\r\n    const KV = env.CORRECTIONS_KV || env.KV;\r\n\r\n    // Build CORS headers per-request (reflect Origin when present)\r\n    function buildCorsHeaders(req) {\r\n      const origin = req.headers.get('Origin') || '*';\r\n      return {\r\n        'Access-Control-Allow-Origin': origin,\r\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, PATCH, DELETE, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, X-Worker-Token, Accept, Authorization, If-None-Match',\r\n        'Access-Control-Allow-Credentials': 'true',\r\n        'Access-Control-Max-Age': '600',\r\n        'Vary': 'Origin'\r\n      };\r\n    }\r\n\r\n    // Preflight handling\r\n    if (request.method === 'OPTIONS') {\r\n      return new Response(null, { status: 204, headers: buildCorsHeaders(request) });\r\n    }\r\n\r\n    const mutatingMethods = ['PATCH', 'PUT', 'POST', 'DELETE'];\r\n\r\n    // Require secret for mutating requests\r\n    async function checkAuth(req) {\r\n      // Temporarily disabled for debugging\r\n      return true;\r\n      // if (!env.WORKER_SECRET) return true; // no secret set = open\r\n      // const token = req.headers.get('X-Worker-Token');\r\n      // return token && token === env.WORKER_SECRET;\r\n    }\r\n\r\n    async function readJsonSafe(req) {\r\n      try { return await req.json(); } catch { return null; }\r\n    }\r\n\r\n    const MAX_PAYLOAD_BYTES = 256 * 1024; // 256KB limit\r\n\r\n    async function getCorrections() {\r\n      if (!KV) return {};\r\n      const raw = await KV.get('corrections');\r\n      if (!raw) return {};\r\n      try { return JSON.parse(raw); } catch { return {}; }\r\n    }\r\n\r\n    async function getVersion() {\r\n      if (!KV) return null;\r\n      const v = await KV.get('corrections_version');\r\n      if (!v) return null;\r\n      const n = Number(v);\r\n      return isNaN(n) ? null : n;\r\n    }\r\n\r\n    async function putVersion(ts) {\r\n      if (!KV) return;\r\n      await KV.put('corrections_version', String(ts));\r\n    }\r\n\r\n    async function putCorrections(obj) {\r\n      if (KV) {\r\n        await KV.put('corrections', JSON.stringify(obj));\r\n        // update version timestamp to help clients detect changes\r\n        const ts = Date.now();\r\n        await putVersion(ts);\r\n      }\r\n    }\r\n\r\n    function convertLegacyArray(arr) {\r\n      const out = {};\r\n      if (!Array.isArray(arr)) return out;\r\n      arr.forEach(savedRow => {\r\n        const key = `${savedRow.gdos_id}-${savedRow.correct === 'Zesty Name to Site Title' ? 'siteTitle' : savedRow.field}`;\r\n        out[key] = { correct: savedRow.correct, value: savedRow.customZestyValue || savedRow.zesty_value };\r\n      });\r\n      return out;\r\n    }\r\n\r\n    try {\r\n      const corsHeaders = buildCorsHeaders(request);\r\n\r\n      // --- GET: public read ---\r\n      if (request.method === 'GET') {\r\n        const current = await getCorrections();\r\n        const version = await getVersion() || Date.now();\r\n        // Support conditional GET using If-None-Match header (ETag)\r\n        const ifNone = request.headers.get('If-None-Match');\r\n        if (ifNone && String(ifNone) === String(version)) {\r\n          return new Response(null, { status: 304, headers: { ...corsHeaders, 'ETag': String(version), 'X-Last-Modified': new Date(Number(version)).toUTCString() } });\r\n        }\r\n        const payload = { current, version };\r\n        return new Response(JSON.stringify(payload), { status: 200, headers: { 'Content-Type': 'application/json', 'ETag': String(version), 'X-Last-Modified': new Date(Number(version)).toUTCString(), ...corsHeaders } });\r\n      }\r\n\r\n      // --- Require secret for writes ---\r\n      if (mutatingMethods.includes(request.method) && !(await checkAuth(request))) {\r\n        return new Response(JSON.stringify({ error: 'Unauthorized: Missing or invalid X-Worker-Token' }), {\r\n          status: 401,\r\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\r\n        });\r\n      }\r\n\r\n      // --- PUT: full overwrite ---\r\n      if (request.method === 'PUT') {\r\n        const text = await request.text();\r\n        if (text.length > MAX_PAYLOAD_BYTES)\r\n          return new Response(JSON.stringify({ error: 'Payload too large' }), { status: 413, headers: { 'Content-Type': 'application/json', ...corsHeaders } });\r\n\r\n        let obj;\r\n        try { obj = JSON.parse(text); } catch { return new Response(JSON.stringify({ error: 'Invalid JSON' }), { status: 400, headers: { 'Content-Type': 'application/json', ...corsHeaders } }); }\r\n\r\n        if (obj && obj.data && Array.isArray(obj.data)) obj = convertLegacyArray(obj.data);\r\n        if (Array.isArray(obj)) obj = convertLegacyArray(obj);\r\n        if (!obj || typeof obj !== 'object') obj = {};\r\n\r\n        await putCorrections(obj);\r\n        return new Response(JSON.stringify({ ok: true }), { status: 200, headers: { 'Content-Type': 'application/json', ...corsHeaders } });\r\n      }\r\n\r\n      // --- PATCH: merge delta ---\r\n      if (request.method === 'PATCH') {\r\n        const text = await request.text();\r\n        if (text.length > MAX_PAYLOAD_BYTES)\r\n          return new Response(JSON.stringify({ error: 'Payload too large' }), { status: 413, headers: { 'Content-Type': 'application/json', ...corsHeaders } });\r\n\r\n        let delta;\r\n        try { delta = JSON.parse(text); } catch { return new Response(JSON.stringify({ error: 'Invalid JSON' }), { status: 400, headers: { 'Content-Type': 'application/json', ...corsHeaders } }); }\r\n\r\n        if (Array.isArray(delta)) delta = convertLegacyArray(delta);\r\n        if (!delta || typeof delta !== 'object')\r\n          return new Response(JSON.stringify({ error: 'Invalid delta' }), { status: 400, headers: { 'Content-Type': 'application/json', ...corsHeaders } });\r\n\r\n        const current = await getCorrections();\r\n        Object.entries(delta).forEach(([k, v]) => { if (v === null) delete current[k]; else current[k] = v; });\r\n        await putCorrections(current);\r\n        const version = await getVersion() || Date.now();\r\n        return new Response(JSON.stringify({ ok: true, merged: Object.keys(delta).length, current, version }), {\r\n          status: 200,\r\n          headers: { 'Content-Type': 'application/json', 'ETag': String(version), 'X-Last-Modified': new Date(Number(version)).toUTCString(), ...corsHeaders }\r\n        });\r\n      }\r\n\r\n      // --- Default fallback ---\r\n      return new Response(JSON.stringify({ error: 'Method not allowed' }), { status: 405, headers: { 'Content-Type': 'application/json', ...corsHeaders } });\r\n    } catch (err) {\r\n      return new Response(JSON.stringify({ error: err.message }), { status: 500, headers: { 'Content-Type': 'application/json', ...buildCorsHeaders(request) } });\r\n    }\r\n  }\r\n};\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\orientrius.cook\\\\OneDrive - SAUSS\\\\Documents\\\\GitHub\\\\USSTHQ-1\\\\gdos-comparison\\\\worker\\\\index.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\orientrius.cook\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\orientrius.cook\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\orientrius.cook\\\\OneDrive - SAUSS\\\\Documents\\\\GitHub\\\\USSTHQ-1\\\\gdos-comparison\\\\worker\\\\index.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\orientrius.cook\\\\OneDrive - SAUSS\\\\Documents\\\\GitHub\\\\USSTHQ-1\\\\gdos-comparison\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-RYmmzG\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\orientrius.cook\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\orientrius.cook\\\\OneDrive - SAUSS\\\\Documents\\\\GitHub\\\\USSTHQ-1\\\\gdos-comparison\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-RYmmzG\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\orientrius.cook\\\\OneDrive - SAUSS\\\\Documents\\\\GitHub\\\\USSTHQ-1\\\\gdos-comparison\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-RYmmzG\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
